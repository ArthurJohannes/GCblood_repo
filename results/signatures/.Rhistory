shiny::runApp('C:/Users/Arthur/Desktop/CourseraR/shinyoefening/bloodVisX112017')
shiny::runApp('C:/Users/Arthur/Desktop/CourseraR/shinyoefening/bloodVisX112017')
3+2
2+1
3+3
dir ()
4+2
4+3
shiny::runApp('C:/Users/Arthur/Desktop/CourseraR/shinyoefening/bloodVisX')
shiny::runApp('C:/Users/Arthur/Desktop/CourseraR/shinyoefening/bloodVisX')
2+2
2+1
2+2
3+2
2+2
2+3
3+2
3+2
5+3
2+2
3+2
1+3
3+2
3+3
2^-1.414
2^-1.295
2^-1.295
2^-1.021
e^-1.414
ln (1)
loge (7)
log (1)
log (7)
2.71828^-1.414
2.71828^-1.295
2.71828^1.295
2.71828^-1.295
2.71828^-1.021
c (0.2431689 + 0.2738981 + 0.2738981 +  0.3602348) /4
ditte <-  c (1.36,	1.359,	2.786,	1.641,	0.053,	-0.379,	1.31,	0.003)
editte <- 2.71828^ditte
editte
t,test (editte [1:4], editte [5,8])
t.test (editte [1:4], editte [5,8])
t.test (editte [1:4], editte [5:8])
log2 (7.291201/1.612038 )
log2 (1.612038/7.291201 )
zbtb16 <-  c(-2.822,	-3.532,	-1.935,	-3.169,	4.008,	2.697,	2.497,	2.136)
ezbtb16 <-   2.71828^c(-2.822,	-3.532,	-1.935,	-3.169,	4.008,	2.697,	2.497,	2.136)
t.test (ezbtb16 [1:4], ezbtb16[5:8])
ezbtb16
t.test (ezbtb16 [1:4], ezbtb16 [5:8])
ezbtb16 <- c (ezbtb16, 10)
t.test (ezbtb16 [1:4], ezbtb16 [5:9])
ezbtb16 <- c (ezbtb16, 15)
t.test (ezbtb16 [1:4], ezbtb16 [5:10])
ezbtb16
alox15b <- c (1.196,	1.122,	0.525,	0.341,	4.073,	3.178,	2.939,	2.857)
ealox15b <-  2.71828^alox15b
ealoxa5b
ealox15b
t.test (ealox15b[1:4], ealox15b[5:10])
t.test (ealox15b[1:4], ealox15b[5:10],paired = TRUE)
t.test (ealox15b[1:4], ealox15b[5:8])
t.test (ealox15b[1:4], ealox15b[5:8],paired = TRUE)
t.test (c (1,2,3,4), c (20,23,27,31))
t.test (alox15b[1:4], alox15b[5:8])
zbtb16
t.test (zbtb16 [1:4], zbtb16 [5:8])
tsc22d3 <- c (1.48,	1.522,	2.176,	2.259,	4.642,	4.413,	4.854,	4.79)
t.test (tsc22d3[1:4], tsc22d3 [5:8])
etsc22d3  <- 2.71828^tsc22d3
etsc22d3
t.test (etsc22d3[1:4], etsc22d3 [5:8])
3+2
3+2
2+3
3+2
setwd("~/GitHub/GCblood_repo/results/fromseparatecollections")
## averageprofilesallqueries_list  <- readRDS ("average_correlations_notsevere.rds")
averageprofilesallqueries_list  <- readRDS ("average_correlations_severe.rds" )
query <- names (averageprofilesallqueries_list)
querylengte <- length (query)
vaanglijstuse <- list ()
##  check nog of use groter 5 beter is dan groter 2
for (i in 1:querylengte) {use <- averageprofilesallqueries_list [[i]] [,3] > 5 ; ditdf <- averageprofilesallqueries_list [[i]] [use,]; ditdf$ranking <- 1:dim (ditdf) [1]; vaanglijstuse [[i]] <- ditdf}
## > for (i in 1:10){print (vaanglijstuse [[i]] [1:10,])}
mijngenes <- as.data.frame (query)
colnames (mijngenes) [1] <- "IDENTIFIER"
merger1 <- merge (mijngenes, vaanglijstuse [[1]] [,c (1,4)], by = "IDENTIFIER",all.x = TRUE)
for (j in 2:querylengte){ merger1 <- merge (merger1, vaanglijstuse [[j]] [,c (1,4)], by = "IDENTIFIER",all.x = TRUE)}
colnames (merger1) <- c ("gene", query)
genesnow <- as.character (merger1$gene)
volgorde <- numeric (); for (i in query){deze <- which (genesnow == i); volgorde <- c (volgorde, deze)}
merger2 <- merger1 [volgorde,]
rownames (merger2) <- as.character (merger2$gene)
merger3 <- merger2 [,-1]
## transpose to have profiles in rows, asymmetric square matrix
tmerger3 <- t (merger3)
print (tmerger3)
image (tmerger3)
rm (list = ls ())
setwd("~/GitHub/GCblood_repo/results/fromseparatecollections")
forGCsignature1_list  <- readRDS ("average_correlations_notsevere.rds")
##   set use > 5
averageprofile_dfuse <- list ()
for (i in 1:7){vang <- forGCsignature1_list [[i]];   use <- vang [,3] > 5 ; vanguse <- vang [use,]; vanguse$ranking <- 1:dim (vanguse) [1]; averageprofile_dfuse [[i]] <- vanguse }
## merge but leave out profile for CXCR4
merger1 <- merge (averageprofile_dfuse [[1]], averageprofile_dfuse [[2]], by = "IDENTIFIER", all = TRUE)
for (i in c (3,4,6,7)) {merger1 <- merge (merger1, averageprofile_dfuse [[i]], by = "IDENTIFIER", all = TRUE)}
merger1$meanranking <- rowMeans (merger1 [,c (4,7,10,13,16,19)], na.rm = TRUE)
## haal weg bv genes die minder dan 3 maal in 6 profiles staan, doe ook bij scan ?
querygenes <- c ("TSC22D3","PER1","ZBTB16","KLF9","DDIT4","IRS2")
allemaal <- character () ; for (i in querygenes) {begin <- paste (c ("cor", "nr", "rank"), i, sep = "."); allemaal <- c (allemaal, begin)}
merger1order <- merger1 [order (merger1$meanranking, decreasing = FALSE),]
colnames (merger1order) <- c ("gene", allemaal,"mean.rank")
rownames (merger1order) <- 1:dim (merger1order) [1]
merger1order$rank.mean <- 1:dim (merger1order) [1]
names (forGCsignature1_list)
head (merger1)
head (merger1order)
averageprofile_dfuse <- list ()
for (i in 1:7){vang <- forGCsignature1_list [[i]];   use <- vang [,3] > 6 ; vanguse <- vang [use,]; vanguse$ranking <- 1:dim (vanguse) [1]; averageprofile_dfuse [[i]] <- vanguse }
## merge but leave out profile for CXCR4
merger1 <- merge (averageprofile_dfuse [[1]], averageprofile_dfuse [[2]], by = "IDENTIFIER", all = TRUE)
for (i in c (3,4,6,7)) {merger1 <- merge (merger1, averageprofile_dfuse [[i]], by = "IDENTIFIER", all = TRUE)}
merger1$meanranking <- rowMeans (merger1 [,c (4,7,10,13,16,19)], na.rm = TRUE)
## haal weg bv genes die minder dan 3 maal in 6 profiles staan, doe ook bij scan ?
querygenes <- c ("TSC22D3","PER1","ZBTB16","KLF9","DDIT4","IRS2")
allemaal <- character () ; for (i in querygenes) {begin <- paste (c ("cor", "nr", "rank"), i, sep = "."); allemaal <- c (allemaal, begin)}
merger1order <- merger1 [order (merger1$meanranking, decreasing = FALSE),]
colnames (merger1order) <- c ("gene", allemaal,"mean.rank")
rownames (merger1order) <- 1:dim (merger1order) [1]
merger1order$rank.mean <- 1:dim (merger1order) [1]
head (merger1order)
averageprofile_dfuse <- list ()
for (i in 1:7){vang <- forGCsignature1_list [[i]];   use <- vang [,3] > 10 ; vanguse <- vang [use,]; vanguse$ranking <- 1:dim (vanguse) [1]; averageprofile_dfuse [[i]] <- vanguse }
## merge but leave out profile for CXCR4
merger1 <- merge (averageprofile_dfuse [[1]], averageprofile_dfuse [[2]], by = "IDENTIFIER", all = TRUE)
for (i in c (3,4,6,7)) {merger1 <- merge (merger1, averageprofile_dfuse [[i]], by = "IDENTIFIER", all = TRUE)}
merger1$meanranking <- rowMeans (merger1 [,c (4,7,10,13,16,19)], na.rm = TRUE)
## haal weg bv genes die minder dan 3 maal in 6 profiles staan, doe ook bij scan ?
querygenes <- c ("TSC22D3","PER1","ZBTB16","KLF9","DDIT4","IRS2")
allemaal <- character () ; for (i in querygenes) {begin <- paste (c ("cor", "nr", "rank"), i, sep = "."); allemaal <- c (allemaal, begin)}
merger1order <- merger1 [order (merger1$meanranking, decreasing = FALSE),]
colnames (merger1order) <- c ("gene", allemaal,"mean.rank")
rownames (merger1order) <- 1:dim (merger1order) [1]
merger1order$rank.mean <- 1:dim (merger1order) [1]
head ( forGCsignature1_list [[1]])
head ( forGCsignature1_list [[3]])
averageprofile_dfuse <- list ()
for (i in 1:7){vang <- forGCsignature1_list [[i]];   use <- vang [,3] > 5 ; vanguse <- vang [use,]; vanguse$ranking <- 1:dim (vanguse) [1]; averageprofile_dfuse [[i]] <- vanguse }
## merge but leave out profile for CXCR4
merger1 <- merge (averageprofile_dfuse [[1]], averageprofile_dfuse [[2]], by = "IDENTIFIER", all = TRUE)
for (i in c (3,4,6,7)) {merger1 <- merge (merger1, averageprofile_dfuse [[i]], by = "IDENTIFIER", all = TRUE)}
merger1$meanranking <- rowMeans (merger1 [,c (4,7,10,13,16,19)], na.rm = TRUE)
## haal weg bv genes die minder dan 3 maal in 6 profiles staan, doe ook bij scan ?
querygenes <- c ("TSC22D3","PER1","ZBTB16","KLF9","DDIT4","IRS2")
allemaal <- character () ; for (i in querygenes) {begin <- paste (c ("cor", "nr", "rank"), i, sep = "."); allemaal <- c (allemaal, begin)}
merger1order <- merger1 [order (merger1$meanranking, decreasing = FALSE),]
colnames (merger1order) <- c ("gene", allemaal,"mean.rank")
rownames (merger1order) <- 1:dim (merger1order) [1]
merger1order$rank.mean <- 1:dim (merger1order) [1]
head(merger1order)
table (merger1order [1,])
rijtjeeen <- merger1order [1,]
riyjeeen
rijtjeeen
table (as.numeric (merger1order [1,]))
watis <- as.numeric (merger1order [1,])
watis
watisfactor <- as.factor (watis)
table (watisfactor)
averageprofile_dfuse <- list ()
for (i in 1:7){vang <- forGCsignature1_list [[i]];   use <- vang [,3] > 2 ; vanguse <- vang [use,]; vanguse$ranking <- 1:dim (vanguse) [1]; averageprofile_dfuse [[i]] <- vanguse }
## merge but leave out profile for CXCR4
merger1 <- merge (averageprofile_dfuse [[1]], averageprofile_dfuse [[2]], by = "IDENTIFIER", all = TRUE)
for (i in c (3,4,6,7)) {merger1 <- merge (merger1, averageprofile_dfuse [[i]], by = "IDENTIFIER", all = TRUE)}
merger1$meanranking <- rowMeans (merger1 [,c (4,7,10,13,16,19)], na.rm = TRUE)
## haal weg bv genes die minder dan 3 maal in 6 profiles staan, doe ook bij scan ?
querygenes <- c ("TSC22D3","PER1","ZBTB16","KLF9","DDIT4","IRS2")
allemaal <- character () ; for (i in querygenes) {begin <- paste (c ("cor", "nr", "rank"), i, sep = "."); allemaal <- c (allemaal, begin)}
merger1order <- merger1 [order (merger1$meanranking, decreasing = FALSE),]
colnames (merger1order) <- c ("gene", allemaal,"mean.rank")
rownames (merger1order) <- 1:dim (merger1order) [1]
merger1order$rank.mean <- 1:dim (merger1order) [1]
head (merger1order)
setwd("~/GitHub/GCblood_repo/results/fromseparatecollections")
forGCsignature2_list <- readRDS ("average_correlations_severe.rds")
##   set use > 5
averageprofile_dfuse <- list ()
for (i in 1:7){vang <- forGCsignature2_list [[i]];  use <- vang [,3] > 5 ; vanguse <- vang [use,]; vanguse$ranking <- 1:dim (vanguse) [1]; averageprofile_dfuse [[i]] <- vanguse }
querygenes <- names (forGCsignature2_list)
merger1 <- merge (averageprofile_dfuse [[1]], averageprofile_dfuse [[2]], by = "IDENTIFIER", all = TRUE)
for (i in c (3:7)) {merger1 <- merge (merger1, averageprofile_dfuse [[i]], by = "IDENTIFIER", all = TRUE)}
merger1$meanranking <- rowMeans (merger1 [,c (4,7,10,13,16,19,22)], na.rm = TRUE)
## haal weg bv genes die minder dan 3 maal in 7 profiles staan, doe ook bij scan ?
allemaal <- character () ; for (i in querygenes) {begin <- paste (c ("cor", "nr", "rank"), i, sep = "."); allemaal <- c (allemaal, begin)}
merger1order <- merger1 [order (merger1$meanranking, decreasing = FALSE),]
colnames (merger1order) <- c ("gene", allemaal,"mean.rank")
rownames (merger1order) <- 1:dim (merger1order) [1]
merger1order$rank.mean <- 1:dim (merger1order) [1]
head (merger1order)
merger1order [1000:1005,]
merger1order [6000:6005,]
tail (merger1order)
averageprofile_dfuse <- list ()
for (i in 1:7){vang <- forGCsignature2_list [[i]];  use <- vang [,3] > 0 ; vanguse <- vang [use,]; vanguse$ranking <- 1:dim (vanguse) [1]; averageprofile_dfuse [[i]] <- vanguse }
querygenes <- names (forGCsignature2_list)
merger1 <- merge (averageprofile_dfuse [[1]], averageprofile_dfuse [[2]], by = "IDENTIFIER", all = TRUE)
for (i in c (3:7)) {merger1 <- merge (merger1, averageprofile_dfuse [[i]], by = "IDENTIFIER", all = TRUE)}
merger1$meanranking <- rowMeans (merger1 [,c (4,7,10,13,16,19,22)], na.rm = TRUE)
## haal weg bv genes die minder dan 3 maal in 7 profiles staan, doe ook bij scan ?
allemaal <- character () ; for (i in querygenes) {begin <- paste (c ("cor", "nr", "rank"), i, sep = "."); allemaal <- c (allemaal, begin)}
merger1order <- merger1 [order (merger1$meanranking, decreasing = FALSE),]
colnames (merger1order) <- c ("gene", allemaal,"mean.rank")
rownames (merger1order) <- 1:dim (merger1order) [1]
merger1order$rank.mean <- 1:dim (merger1order) [1]
head (merger1order)
averageprofile_dfuse <- list ()
for (i in 1:7){vang <- forGCsignature1_list [[i]];   use <- vang [,3] > 0 ; vanguse <- vang [use,]; vanguse$ranking <- 1:dim (vanguse) [1]; averageprofile_dfuse [[i]] <- vanguse }
## merge but leave out profile for CXCR4
merger1 <- merge (averageprofile_dfuse [[1]], averageprofile_dfuse [[2]], by = "IDENTIFIER", all = TRUE)
for (i in c (3,4,6,7)) {merger1 <- merge (merger1, averageprofile_dfuse [[i]], by = "IDENTIFIER", all = TRUE)}
merger1$meanranking <- rowMeans (merger1 [,c (4,7,10,13,16,19)], na.rm = TRUE)
## haal weg bv genes die minder dan 3 maal in 6 profiles staan, doe ook bij scan ?
querygenes <- c ("TSC22D3","PER1","ZBTB16","KLF9","DDIT4","IRS2")
allemaal <- character () ; for (i in querygenes) {begin <- paste (c ("cor", "nr", "rank"), i, sep = "."); allemaal <- c (allemaal, begin)}
merger1order <- merger1 [order (merger1$meanranking, decreasing = FALSE),]
colnames (merger1order) <- c ("gene", allemaal,"mean.rank")
rownames (merger1order) <- 1:dim (merger1order) [1]
merger1order$rank.mean <- 1:dim (merger1order) [1]
head (merger1order)
setwd("~/GitHub/GCblood_repo/data")
identifiersGPL570 <- readRDS ("identifiers_gpl570.rds")
identifiersGPL10558 <- readRDS ("identifiers_gpl10558.rds")
identifiers <- unique (c (identifiersGPL570,identifiersGPL10558))
setwd("~/GitHub/GCblood_repo/results/fromseparatecollections")
intersect("PER1", identifiersGPL10558)
intersect("PER1", identifiersGPL570)
intersect("LOC15219", identifiersGPL10558)
intersect("LOC15219", identifiersGPL570)
intersect("LOC152195", identifiersGPL10558)
intersect("LOC152195", identifiersGPL570)
intersect("CUGBP2", identifiersGPL570)
intersect("CUGBP2", identifiersGPL10558)
setwd("~/GitHub/GCblood_repo/results/fromseparatecollections")
forGCsignature1_list  <- readRDS ("average_correlations_notsevere.rds")
##   set use > 5
averageprofile_dfuse <- list ()
for (i in 1:7){vang <- forGCsignature1_list [[i]];   use <- vang [,3] > 5 ; vanguse <- vang [use,]; vanguse$ranking <- 1:dim (vanguse) [1]; averageprofile_dfuse [[i]] <- vanguse }
## merge but leave out profile for CXCR4
merger1 <- merge (averageprofile_dfuse [[1]], averageprofile_dfuse [[2]], by = "IDENTIFIER", all = TRUE)
for (i in c (3,4,6,7)) {merger1 <- merge (merger1, averageprofile_dfuse [[i]], by = "IDENTIFIER", all = TRUE)}
merger1$meanranking <- rowMeans (merger1 [,c (4,7,10,13,16,19)], na.rm = TRUE)
## haal weg bv genes die minder dan 3 maal in 6 profiles staan, doe ook bij scan ?
querygenes <- c ("TSC22D3","PER1","ZBTB16","KLF9","DDIT4","IRS2")
allemaal <- character () ; for (i in querygenes) {begin <- paste (c ("cor", "nr", "rank"), i, sep = "."); allemaal <- c (allemaal, begin)}
merger1order <- merger1 [order (merger1$meanranking, decreasing = FALSE),]
colnames (merger1order) <- c ("gene", allemaal,"mean.rank")
rownames (merger1order) <- 1:dim (merger1order) [1]
merger1order$rank.mean <- 1:dim (merger1order) [1]
head (merger1order)
rowMeans(merger1order [1:6,c (3,6,9,12,15,18,)],na.rm = TRUE)
rowMeans(merger1order [1:6,c (3,6,9,12,15,18)],na.rm = TRUE)
rowMeans(merger1order [1:6,c (3,6,9,12,15,18)],na.rm = FALSE)
rowSums(merger1order [1:6,c (3,6,9,12,15,18)])
rowSums(merger1order [1:6,c (3,6,9,12,15,18)], na.rm = TRUE)
rowSums(merger1order [1:50,c (3,6,9,12,15,18)], na.rm = TRUE)
setwd("~/GitHub/GCblood_repo/results/fromseparatecollections")
forGCsignature2_list <- readRDS ("average_correlations_severe.rds")
##   set use > 5
averageprofile_dfuse <- list ()
for (i in 1:7){vang <- forGCsignature2_list [[i]];  use <- vang [,3] > 5 ; vanguse <- vang [use,]; vanguse$ranking <- 1:dim (vanguse) [1]; averageprofile_dfuse [[i]] <- vanguse }
querygenes <- names (forGCsignature2_list)
merger1 <- merge (averageprofile_dfuse [[1]], averageprofile_dfuse [[2]], by = "IDENTIFIER", all = TRUE)
for (i in c (3:7)) {merger1 <- merge (merger1, averageprofile_dfuse [[i]], by = "IDENTIFIER", all = TRUE)}
merger1$meanranking <- rowMeans (merger1 [,c (4,7,10,13,16,19,22)], na.rm = TRUE)
## haal weg bv genes die minder dan 3 maal in 7 profiles staan, doe ook bij scan ?
allemaal <- character () ; for (i in querygenes) {begin <- paste (c ("cor", "nr", "rank"), i, sep = "."); allemaal <- c (allemaal, begin)}
merger1order <- merger1 [order (merger1$meanranking, decreasing = FALSE),]
colnames (merger1order) <- c ("gene", allemaal,"mean.rank")
rownames (merger1order) <- 1:dim (merger1order) [1]
merger1order$rank.mean <- 1:dim (merger1order) [1]
rowSums(merger1order [1:50,c (3,6,9,12,15,18)], na.rm = TRUE)
merger1$sumofsupportingdatasets <- rowSums(merger1 [,c (3,6,9,12,15,18)], na.rm = TRUE)
head (merger1)
merger1order [1:50, 1:6]
averageprofile_dfuse <- list ()
for (i in 1:7){vang <- forGCsignature1_list [[i]];   use <- vang [,3] > 5 ; vanguse <- vang [use,]; vanguse$ranking <- 1:dim (vanguse) [1]; averageprofile_dfuse [[i]] <- vanguse }
## merge but leave out profile for CXCR4
merger1 <- merge (averageprofile_dfuse [[1]], averageprofile_dfuse [[2]], by = "IDENTIFIER", all = TRUE)
for (i in c (3,4,6,7)) {merger1 <- merge (merger1, averageprofile_dfuse [[i]], by = "IDENTIFIER", all = TRUE)}
merger1$meanranking <- rowMeans (merger1 [,c (4,7,10,13,16,19)], na.rm = TRUE)
## haal weg bv genes die minder dan 3 maal in 6 profiles staan, doe ook bij scan ?
merger1$sumofsupportingdatasets <- rowSums(merger1 [1:50,c (3,6,9,12,15,18)], na.rm = TRUE)
querygenes <- c ("TSC22D3","PER1","ZBTB16","KLF9","DDIT4","IRS2")
allemaal <- character () ; for (i in querygenes) {begin <- paste (c ("cor", "nr", "rank"), i, sep = "."); allemaal <- c (allemaal, begin)}
merger1order <- merger1 [order (merger1$meanranking, decreasing = FALSE),]
colnames (merger1order) <- c ("gene", allemaal,"mean.rank")
rownames (merger1order) <- 1:dim (merger1order) [1]
merger1order$rank.mean <- 1:dim (merger1order) [1]
setwd("~/GitHub/GCblood_repo/results/fromseparatecollections")
forGCsignature1_list  <- readRDS ("average_correlations_notsevere.rds")
##   set use > 5
averageprofile_dfuse <- list ()
for (i in 1:7){vang <- forGCsignature1_list [[i]];   use <- vang [,3] > 5 ; vanguse <- vang [use,]; vanguse$ranking <- 1:dim (vanguse) [1]; averageprofile_dfuse [[i]] <- vanguse }
## merge but leave out profile for CXCR4
merger1 <- merge (averageprofile_dfuse [[1]], averageprofile_dfuse [[2]], by = "IDENTIFIER", all = TRUE)
for (i in c (3,4,6,7)) {merger1 <- merge (merger1, averageprofile_dfuse [[i]], by = "IDENTIFIER", all = TRUE)}
merger1$meanranking <- rowMeans (merger1 [,c (4,7,10,13,16,19)], na.rm = TRUE)
## haal weg bv genes die minder dan 3 maal in 6 profiles staan, doe ook bij scan ?
merger1$sumofsupportingdatasets <- rowSums(merger1 [,c (3,6,9,12,15,18)], na.rm = TRUE)
querygenes <- c ("TSC22D3","PER1","ZBTB16","KLF9","DDIT4","IRS2")
allemaal <- character () ; for (i in querygenes) {begin <- paste (c ("cor", "nr", "rank"), i, sep = "."); allemaal <- c (allemaal, begin)}
merger1order <- merger1 [order (merger1$meanranking, decreasing = FALSE),]
colnames (merger1order) <- c ("gene", allemaal,"mean.rank")
rownames (merger1order) <- 1:dim (merger1order) [1]
merger1order$rank.mean <- 1:dim (merger1order) [1]
head (merger1order)
head (merger1)
colnames (merger1)
dim (merger1)
dim (merger1order)
colnames (merger1order)
setwd("~/GitHub/GCblood_repo/results/fromseparatecollections")
forGCsignature1_list  <- readRDS ("average_correlations_notsevere.rds")
##   set use > 5
averageprofile_dfuse <- list ()
for (i in 1:7){vang <- forGCsignature1_list [[i]];   use <- vang [,3] > 5 ; vanguse <- vang [use,]; vanguse$ranking <- 1:dim (vanguse) [1]; averageprofile_dfuse [[i]] <- vanguse }
## merge but leave out profile for CXCR4
merger1 <- merge (averageprofile_dfuse [[1]], averageprofile_dfuse [[2]], by = "IDENTIFIER", all = TRUE)
for (i in c (3,4,6,7)) {merger1 <- merge (merger1, averageprofile_dfuse [[i]], by = "IDENTIFIER", all = TRUE)}
merger1$meanranking <- rowMeans (merger1 [,c (4,7,10,13,16,19)], na.rm = TRUE)
## haal weg bv genes die minder dan 3 maal in 6 profiles staan, doe ook bij scan ?
## merger1$sumofsupportingdatasets <- rowSums(merger1 [,c (3,6,9,12,15,18)], na.rm = TRUE)
querygenes <- c ("TSC22D3","PER1","ZBTB16","KLF9","DDIT4","IRS2")
allemaal <- character () ; for (i in querygenes) {begin <- paste (c ("cor", "nr", "rank"), i, sep = "."); allemaal <- c (allemaal, begin)}
merger1order <- merger1 [order (merger1$meanranking, decreasing = FALSE),]
colnames (merger1order) <- c ("gene", allemaal,"mean.rank")
rownames (merger1order) <- 1:dim (merger1order) [1]
merger1order$rank.mean <- 1:dim (merger1order) [1]
head (merger1)
head (merger1order)
rowSums(merger1 [1:6,c (3,6,9,12,15,18)], na.rm = TRUE)
rowSums(merger1order [1:6,c (3,6,9,12,15,18)], na.rm = TRUE)
setwd("~/GitHub/GCblood_repo/results/fromseparatecollections")
forGCsignature1_list  <- readRDS ("average_correlations_notsevere.rds")
##   set use > 5
averageprofile_dfuse <- list ()
for (i in 1:7){vang <- forGCsignature1_list [[i]];   use <- vang [,3] > 5 ; vanguse <- vang [use,]; vanguse$ranking <- 1:dim (vanguse) [1]; averageprofile_dfuse [[i]] <- vanguse }
## merge but leave out profile for CXCR4
merger1 <- merge (averageprofile_dfuse [[1]], averageprofile_dfuse [[2]], by = "IDENTIFIER", all = TRUE)
for (i in c (3,4,6,7)) {merger1 <- merge (merger1, averageprofile_dfuse [[i]], by = "IDENTIFIER", all = TRUE)}
merger1$meanranking <- rowMeans (merger1 [,c (4,7,10,13,16,19)], na.rm = TRUE)
## haal weg bv genes die minder dan 3 maal in 6 profiles staan, doe ook bij scan ?
querygenes <- c ("TSC22D3","PER1","ZBTB16","KLF9","DDIT4","IRS2")
allemaal <- character () ; for (i in querygenes) {begin <- paste (c ("cor", "nr", "rank"), i, sep = "."); allemaal <- c (allemaal, begin)}
merger1order <- merger1 [order (merger1$meanranking, decreasing = FALSE),]
colnames (merger1order) <- c ("gene", allemaal,"mean.rank")
##  in case of smaller collection example set minimal times of supporting datasets in total of all 6 query genes
merger1order$sumofsupportingdatasets <- rowSums(merger1 [,c (3,6,9,12,15,18)], na.rm = TRUE)
groter19 <- merger1order$sumofsupportingdatasets > 19
merger2 <- merger1 [groter19,]
rownames (merger2order) <- 1:dim (merger2order) [1]
merger2order$rank.mean <- 1:dim (merger2order) [1]
colnames (merger1order)
setwd("~/GitHub/GCblood_repo/results/fromseparatecollections")
forGCsignature1_list  <- readRDS ("average_correlations_notsevere.rds")
##   set use > 5
averageprofile_dfuse <- list ()
for (i in 1:7){vang <- forGCsignature1_list [[i]];   use <- vang [,3] > 5 ; vanguse <- vang [use,]; vanguse$ranking <- 1:dim (vanguse) [1]; averageprofile_dfuse [[i]] <- vanguse }
## merge but leave out profile for CXCR4
merger1 <- merge (averageprofile_dfuse [[1]], averageprofile_dfuse [[2]], by = "IDENTIFIER", all = TRUE)
for (i in c (3,4,6,7)) {merger1 <- merge (merger1, averageprofile_dfuse [[i]], by = "IDENTIFIER", all = TRUE)}
merger1$meanranking <- rowMeans (merger1 [,c (4,7,10,13,16,19)], na.rm = TRUE)
## haal weg bv genes die minder dan 3 maal in 6 profiles staan, doe ook bij scan ?
querygenes <- c ("TSC22D3","PER1","ZBTB16","KLF9","DDIT4","IRS2")
allemaal <- character () ; for (i in querygenes) {begin <- paste (c ("cor", "nr", "rank"), i, sep = "."); allemaal <- c (allemaal, begin)}
merger1order <- merger1 [order (merger1$meanranking, decreasing = FALSE),]
colnames (merger1order) <- c ("gene", allemaal,"mean.rank")
##  in case of smaller collection example set minimal times of supporting datasets in total of all 6 query genes
merger1order$sumofsupportingdatasets <- rowSums(merger1order [,c (3,6,9,12,15,18)], na.rm = TRUE)
groter19 <- merger1order$sumofsupportingdatasets > 19
merger2order <- merger1order [groter19,]
rownames (merger2order) <- 1:dim (merger2order) [1]
merger2order$rank.mean <- 1:dim (merger2order) [1]
head (merger2order)
setwd("~/GitHub/GCblood_repo/results/fromseparatecollections")
forGCsignature1_list  <- readRDS ("average_correlations_notsevere.rds")
##   set use > 5
averageprofile_dfuse <- list ()
for (i in 1:7){vang <- forGCsignature1_list [[i]];   use <- vang [,3] > 5 ; vanguse <- vang [use,]; vanguse$ranking <- 1:dim (vanguse) [1]; averageprofile_dfuse [[i]] <- vanguse }
## merge but leave out profile for CXCR4
merger1 <- merge (averageprofile_dfuse [[1]], averageprofile_dfuse [[2]], by = "IDENTIFIER", all = TRUE)
for (i in c (3,4,6,7)) {merger1 <- merge (merger1, averageprofile_dfuse [[i]], by = "IDENTIFIER", all = TRUE)}
merger1$meanranking <- rowMeans (merger1 [,c (4,7,10,13,16,19)], na.rm = TRUE)
## haal weg bv genes die minder dan 3 maal in 6 profiles staan, doe ook bij scan ?
querygenes <- c ("TSC22D3","PER1","ZBTB16","KLF9","DDIT4","IRS2")
allemaal <- character () ; for (i in querygenes) {begin <- paste (c ("cor", "nr", "rank"), i, sep = "."); allemaal <- c (allemaal, begin)}
merger1order <- merger1 [order (merger1$meanranking, decreasing = FALSE),]
colnames (merger1order) <- c ("gene", allemaal,"mean.rank")
##  in case of smaller collection example set minimal times of supporting datasets in total of all 6 query genes
merger1order$sumofsupportingdatasets <- rowSums(merger1order [,c (3,6,9,12,15,18)], na.rm = TRUE)
groter29 <- merger1order$sumofsupportingdatasets > 29
merger2order <- merger1order [groter19,]
rownames (merger2order) <- 1:dim (merger2order) [1]
merger2order$rank.mean <- 1:dim (merger2order) [1]
head (merger2order)
##   set use > 5
averageprofile_dfuse <- list ()
for (i in 1:7){vang <- forGCsignature1_list [[i]];   use <- vang [,3] > 5 ; vanguse <- vang [use,]; vanguse$ranking <- 1:dim (vanguse) [1]; averageprofile_dfuse [[i]] <- vanguse }
## merge but leave out profile for CXCR4
merger1 <- merge (averageprofile_dfuse [[1]], averageprofile_dfuse [[2]], by = "IDENTIFIER", all = TRUE)
for (i in c (3,4,6,7)) {merger1 <- merge (merger1, averageprofile_dfuse [[i]], by = "IDENTIFIER", all = TRUE)}
merger1$meanranking <- rowMeans (merger1 [,c (4,7,10,13,16,19)], na.rm = TRUE)
## haal weg bv genes die minder dan 3 maal in 6 profiles staan, doe ook bij scan ?
querygenes <- c ("TSC22D3","PER1","ZBTB16","KLF9","DDIT4","IRS2")
allemaal <- character () ; for (i in querygenes) {begin <- paste (c ("cor", "nr", "rank"), i, sep = "."); allemaal <- c (allemaal, begin)}
merger1order <- merger1 [order (merger1$meanranking, decreasing = FALSE),]
colnames (merger1order) <- c ("gene", allemaal,"mean.rank")
##  in case of smaller collection example set minimal times of supporting datasets in total of all 6 query genes
merger1order$sumofsupportingdatasets <- rowSums(merger1order [,c (3,6,9,12,15,18)], na.rm = TRUE)
groter29 <- merger1order$sumofsupportingdatasets > 29
merger2order <- merger1order [groter29,]
rownames (merger2order) <- 1:dim (merger2order) [1]
merger2order$rank.mean <- 1:dim (merger2order) [1]
head (merger2order)
merger2order [1:50,]
colnames (merger2order)
merger2order [1:5, c (1,3,6,9,12,15,18,21,22)]
merger2order [1:5, c (1,3,6,9,12,15,18,21,22)]
merger2order [1:50, c (1,3,6,9,12,15,18,21,22)]
merger2order [1:50, c (1,4,7,10,13,16,19,21,22)]
setwd("~/GitHub/GCblood_repo/results/signatures")
forGCsignature1_list <- readRDS ("forGCsignature1.rds")
##   set minimal number of supporting datasets required for all genes present in each averageprofiledf  : use > 5
averageprofile_dfuse <- list ()
for (i in 1:7) {
file <-
forGCsignature1_list [[i]]; averageprofiledf <-
file$averageprofile_df;  use <-
averageprofiledf [,3] > 5 ; averageprofiledfuse <-
averageprofiledf [use,]; averageprofiledfuse$ranking <-
1:dim (averageprofiledfuse) [1]; averageprofile_dfuse [[i]] <-
averageprofiledfuse
}
##  combine 6 averageprofiledf for average of averages
##  but leave out profile for CXCR4, according to signature GC-1 in manuscript
merger1 <-
merge (averageprofile_dfuse [[1]], averageprofile_dfuse [[2]], by = "IDENTIFIER", all = TRUE)
for (i in c (3,4,6,7)) {
merger1 <-
merge (merger1, averageprofile_dfuse [[i]], by = "IDENTIFIER", all = TRUE)
}
merger1$meanranking <-
rowMeans (merger1 [,c (4,7,10,13,16,19)], na.rm = TRUE)
querygenes <- c ("TSC22D3","PER1","ZBTB16","KLF9","DDIT4","IRS2")
mergercolnames <-
character () ; for (i in querygenes) {
begin <-
paste (c ("cor", "nr", "rank"), i, sep = "."); mergercolnames <-
c (mergercolnames, begin)
}
merger1order <-
merger1 [order (merger1$meanranking, decreasing = FALSE),]
colnames (merger1order) <- c ("gene", mergercolnames,"mean.rank")
rownames (merger1order) <- 1:dim (merger1order) [1]
merger1order$rank.mean <- 1:dim (merger1order) [1]
print ("RANKED PROFILES FOR 6 GC-1 QUERY GENES AND RANKED AVERAGED PROFILE")
print (head (merger1order))
print (merger1order [1:50, c (1, 20)])
print (merger1order [1:50,])
##  SECOND GC2
setwd("~/GitHub/GCblood_repo/results/signatures")
forGCsignature2_list <- readRDS ("forGCsignature2.rds")
## set minimal number of supporting datasets required for all genes present in each averageprofiledf  : use > 5
averageprofile_dfuse <- list ()
for (i in 1:7) {
file <-
forGCsignature2_list [[i]]; averageprofiledf <-
file$averageprofile_df;  use <-
averageprofiledf [,3] > 5 ; averageprofiledfuse <-
averageprofiledf [use,]; averageprofiledfuse$ranking <-
1:dim (averageprofiledfuse) [1]; averageprofile_dfuse [[i]] <-
averageprofiledfuse
}
##  combine 7 averageprofiledf for average of averages
querygenes <- names (forGCsignature2_list)
merger1 <-
merge (averageprofile_dfuse [[1]], averageprofile_dfuse [[2]], by = "IDENTIFIER", all = TRUE)
for (i in c (3:7)) {
merger1 <-
merge (merger1, averageprofile_dfuse [[i]], by = "IDENTIFIER", all = TRUE)
}
merger1$meanranking <-
rowMeans (merger1 [,c (4,7,10,13,16,19,22)], na.rm = TRUE)
mergercolnames <-
character () ; for (i in querygenes) {
begin <-
paste (c ("cor", "nr", "rank"), i, sep = "."); mergercolnames <-
c (mergercolnames, begin)
}
merger1order <-
merger1 [order (merger1$meanranking, decreasing = FALSE),]
colnames (merger1order) <- c ("gene", mergercolnames,"mean.rank")
rownames (merger1order) <- 1:dim (merger1order) [1]
merger1order$rank.mean <- 1:dim (merger1order) [1]
print ("RANKED PROFILES FOR 7 GC-2 QUERY GENES AND RANKED AVERAGED PROFILE")
print (head (merger1order))
print (merger1order [1:50, c (1, 23)])
print (merger1order [1:50,])
